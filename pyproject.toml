# =================================================== Overview =========================================================
# pip3.12 install -e .
[project]
name = "Analog-Automagic-Layout"
version = "2.0.0"
description = "Generates a Magic VLSI layout from an Xschem schematic"
readme = {file = "README.md", content-type = "text/markdown"}
license = {file = "LICENSE" }
requires-python = ">=3.10"
authors = [
    { name = "Bjørn K.T. Solheim", email = "bjorn_solheim@hotmail.no" },
    { name = "Leidulv Tønnesland", email = "leidulv.tonnesland@gmail.com" },
]
dynamic = ["dependencies"]

[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt"]}

# ===================================================== Configs ========================================================

# Initiator of Linear optimization config options
# -> Sub Cell Offset 1-3 - Offset between groupings of resistors, capacitors and transistors
# -> United Res Cap - Allows placement of resistors and capacitors in the same subcell
# -> RELATIVE COMPONENT PLACEMENT - Of components in the same cell, either "H" - Horizontal  or "V" - Vertical placement
# -> ENABLE CUSTOM RELATIVE PLACEMENT ORDER - Decides order of placement. The first placement will be leftmost or below
# -> CUSTOM COMPONENT ORDER - The defined custom order. Utilize letters
#       "T" - MOSFET
#       "B" - BJT
#       "R" - Resistor
#       "C" - Capacitor

[initiator_lp]
UNITED_RES_CAP = false
RELATIVE_COMPONENT_PLACEMENT = "H"
ENABLE_CUSTOM_COMPONENT_ORDER = true
CUSTOM_COMPONENT_ORDER = ["B","C","T","R"]
SUB_CELL_OFFSET_1 = 200
SUB_CELL_OFFSET_2 = 200
SUB_CELL_OFFSET_3 = 200

# Linear optimization config options
# -> RUN - Boolean used for debugging. Turns on or off the execution of linear optimization
# -> SOLVER MSG - Enables print functions in the solver
# -> ALPHA - Constant for weighing the importance of total Manhattan distance between
#            components in the objective function
# -> BETA - Constant for weighing the importance of perimeter along the x-axis in the objective function
# -> THETA - Constant for weighing the importance of perimeter along the y-axis in the objective function
# -> UNIT_WIDTH, UNIT_HEIGHT - Additional intervals of allowable placements along the x- and y-axis
# -> OFFSET_Y, OFFSET_Y - Minimum offset along the x- and y-axis between components that can not overlap
# -> MIRROR - Boolean used for debugging. Turns on or off the mirroring constraint
# -> STOP_TOLERANCE - MIP gap threshold percentage for when to stop searching with respect to the relative difference
#                     between primal and dual solutions
# -> CUSTOM_PARAMETERS - Boolean choosing between parameters in standard or using specific parameters for
#                        different components
# -> GRID_SIZE - Size of space components have to fit within

[linear_optimization]
RUN = true
SOLVER_MSG = true
CUSTOM_PARAMETERS = true

[linear_optimization.standard]
UNIT_HEIGHT = 400
UNIT_WIDTH = 576
OFFSET_X = 184
OFFSET_Y = 700
ALPHA = 0.001
BETA = 100
THETA = 5
GRID_SIZE = 8000

[linear_optimization.transistor]
UNIT_HEIGHT = 100
UNIT_WIDTH = 576
MIRROR = true
STOP_TOLERANCE = 0.01
OFFSET_X = 184
OFFSET_Y = 700
VERTICAL_SYMMETRY = true
HORIZONTAL_SYMMETRY = false
ALPHA = 0.01
BETA = 1000
THETA = 50
GRID_SIZE = 7000

[linear_optimization.resistor]
UNIT_HEIGHT = 10
UNIT_WIDTH = 50
MIRROR = true
STOP_TOLERANCE = 0.005
OFFSET_X = 100
OFFSET_Y = 50
VERTICAL_SYMMETRY = false
HORIZONTAL_SYMMETRY = true
ALPHA = 0.001
BETA = 1000
THETA = 50
GRID_SIZE = 8000

[linear_optimization.capacitor]
UNIT_HEIGHT = 10
UNIT_WIDTH = 10
MIRROR = true
STOP_TOLERANCE = 0.005
OFFSET_X = 110
OFFSET_Y = 110
VERTICAL_SYMMETRY = true
HORIZONTAL_SYMMETRY = false
ALPHA = 0.001
BETA = 100
THETA = 5
GRID_SIZE = 6000

[linear_optimization.bipolar_transistors]
UNIT_HEIGHT = 50
UNIT_WIDTH = 50
MIRROR = true
STOP_TOLERANCE = 0.01
OFFSET_X = 50 # 184
OFFSET_Y = 50 # 100
VERTICAL_SYMMETRY = true
HORIZONTAL_SYMMETRY = false
ALPHA = 0.1
BETA = 100
THETA = 5
GRID_SIZE = 8000

# Magic layout creator config options
# -> Technology - defines which PDK technology we are targeting
# -> Metal layers - defines the metal layers that can be route in (ascending order)
# -> Via map - defines the via layers we can route in (ascending order)
# -> Via padding - defines how much padding in units of 1e-8m should be added around all vias

[magic_layout_creator]
#TECHNOLOGY = 'sky130A'
#METAL_LAYERS = ['locali', 'm1', 'm2', 'm3', 'm4', 'm5']
#VIA_MAP = {"locali-m1" = "viali", "m1-m2" = "via1", "m2-m3" = "via2", "m3-m4" = "via3", "m4-m5" = "via4"}
#VIA_PADDING = 7
TECHNOLOGY = 'ihp-sg13g2'
METAL_LAYERS = ['metal1', 'metal2', 'metal3', 'metal4', 'metal5']
VIA_MAP = {"metal1-metal2" = "via1", "metal2-metal3" = "via2", "metal3-metal4" = "via3", "metal4-metal5" = "via4"}
VIA_PADDING = 7

# Generate rail traces config options
# -> Init rail ring offset x/y - offset from cells defined bounding box
# -> rail ring offset - distance from the outside of one ring to the outside of the next
# -> rail width

[generate_rail_traces]
INIT_RAIL_RING_OFFSET_Y = 50
INIT_RAIL_RING_OFFSET_X = 50
RAIL_RING_OFFSET = 100
RAIL_RING_WIDTH = 50

# Generate grid config options
# -> SCALE_FACTOR - Factor determining descale for routing space representation
# -> TRACE_WIDTH - width of traces
# -> VIA_MINIMUM_DISTANCE - minimum offset between via points
# -> GRID_LEEWAY_X/Y - extra space outside of component placement for additional routing space
# -> SCALED_PARAMETERS - Certain parameters are calculated and utilized in routing space.
#                        The adjust variables allow for easy manual adjustments of sizings.

[generate_grid]
SCALE_FACTOR = 16
TRACE_WIDTH = 30
VIA_MINIMUM_DISTANCE = 20
GRID_LEEWAY_X = 500
GRID_LEEWAY_Y = 500

[generate_grid.scaled_parameters]
ADJUST_MIN_SEG_LENGTH = 0
ADJUST_PORT_SCALED_SIZE = 0
ADJUST_SEG_WIDTH = 0
ADJUST_CAP_PORT_WIDTH = 3
ADJUST_CAP_PORT_HEIGHT = 2
ADJUST_RES_PORT_WIDTH = 1
ADJUST_RES_PORT_HEIGHT = 1

# Astar initiator config options
# -> RUN_MULTIPLE_ASTAR - Allows A* to be executed with each goal node as initial position to find the shortest path
# -> CUSTOM_NET_ORDER - Enables utilizing predefined order of nets in A* execution.
# -> REMOVE_LOOPS - Enables functionality that removes unnecessary loops generated in A*
# -> TSP_NODE_ORDER - Enables functionality that pre_computes the best order of goal nodes,
#                     and executes A* between pairs of goal nodes. Increase speed, but might be supoptimal
# -> NET_ORDER - Predefined net orders. Variable names should correspond to CELL names.
#                All cells and nets have to be defined.

[a_star_initiator]
RUN_MULTIPLE_ASTAR = false
CUSTOM_NET_ORDER = false
REMOVE_LOOPS = true
TSP_NODE_ORDER = true
NET_ORDER = ["GATE", "INN",  "INP", "OUT", "IB_GATE", "AFTER_RESISTOR1", "AFTER_RESISTOR2", "OTA_SPLIT", "VDD", "VSS"]

[a_star_initiator.custom_net_order]
JNW_BKLE = ["VDD", "VSS"]
COMP2 = ["net4", "VO","VIP", "VIN", "I_BIAS", "net3", "net1", "net2", "VDD", "VSS"]
COMP3 = ["net4", "VO","VIP", "VIN", "I_BIAS", "net3", "net1", "net2", "VDD", "VSS"]

# Cell creator config options
# -> Cells per row in top cell - Define how many cells should placed per row in the projects defined top cell
[cell_creator]
CELLS_PER_ROW_IN_TOP_CELL = 1




