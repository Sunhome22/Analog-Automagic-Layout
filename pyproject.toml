# =================================================== Overview =========================================================
# pip3.12 install -e .
[project]
name = "Analog-Automagic-Layout"
version = "2.0.0"
description = "Generates a Magic VLSI layout from an Xschem schematic"
readme = {file = "README.md", content-type = "text/markdown"}
license = {file = "LICENSE" }
requires-python = ">=3.10"
authors = [
    { name = "Bjørn K.T. Solheim", email = "bjorn_solheim@hotmail.no" },
    { name = "Leidulv Tønnesland", email = "leidulv.tonnesland@gmail.com" },
]
dynamic = ["dependencies"]

[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt"]}

# ===================================================== Configs ========================================================

#Initiator of Linear optimization config options
# -> Sub Cell Offset X - Offset between groupings of resistors, capacitors and transistors
# -> United Res Cap - Allows placement of resistors and capacitors in the same cell
# -> RELATIVE PLACEMENT - Of components in the same cell, either "S" - side by side or "A" - Above
# -> CUSTOM RELATIVE PLACEMENT ORDER - Decides order of placement. The first placement will be leftmost or below
# -> ENABLE CUSTOM TRANSISTOR ORDER - enables custom transistor order. The first element is placed below the other
# -> CUSTOM TRANSISTOR ORDER - The defined custom order, can be changed. Utilize "C" for cmos and "B" for bipolar

[initiator_lp]
SUB_CELL_OFFSET = 350 # 450
UNITED_RES_CAP = false # Needs fixing
RELATIVE_COMPONENT_PLACEMENT = "A"
ENABLE_CUSTOM_COMPONENT_ORDER = true
CUSTOM_COMPONENT_ORDER = ["T","C","R","B"]
ENABLE_CUSTOM_TRANSISTOR_ORDER = true


# Linear optimization config options
# -> Alpha - Constant for weighing the importance of total Manhattan distance between
#                     components in the objective function
# -> Beta - Constant for weighing the importance of perimeter along the x-axis in the objective function
# -> Theta - Constant for weighing the importance of perimeter along the y-axis in the objective function
# -> Unit_width, Unit_height - Unit width and height are intervals of allowable placements along the x- and y-axis
# -> Offset_x, Offset_y - Minimum offset along the x- and y-axis between components that can not overlap
# -> Mirror - Boolean used for debugging. Turns on or off the mirroring constraint
# -> Run - Boolean used for debugging. Turns on or off the execution of linear optimization
# -> Stop_tolerance - MIP gap threshold percentage for when to stop searching with respect to the relative difference
#                     between primal and dual solutions
# -> CUSTOM_PARAMETERS - Boolean choosing between parameters in standard or using specific parameters for
#                     different components

[linear_optimization]
RUN = true
TIME_LIMIT = 2
SOLVER_MSG = true
CUSTOM_PARAMETERS = true

[linear_optimization.standard]
UNIT_HEIGHT = 400
UNIT_WIDTH = 576
OFFSET_X = 184
OFFSET_Y = 700
ALPHA = 0.001
BETA = 100
THETA = 5
GRID_SIZE = 8000

[linear_optimization.transistor]
UNIT_HEIGHT = 400
UNIT_WIDTH = 576
MIRROR = true
STOP_TOLERANCE = 0.01
OFFSET_X = 184
OFFSET_Y = 500
VERTICAL_SYMMETRY = true
HORIZONTAL_SYMMETRY = false
ALPHA = 0.001
BETA = 100
THETA = 1
GRID_SIZE = 7000

[linear_optimization.resistor]
UNIT_HEIGHT = 10
UNIT_WIDTH = 50
MIRROR = true
STOP_TOLERANCE = 0.005
OFFSET_X = 100
OFFSET_Y = 50
VERTICAL_SYMMETRY = false
HORIZONTAL_SYMMETRY = true
ALPHA = 0.001
BETA = 1000
THETA = 50
GRID_SIZE = 8000

[linear_optimization.capacitor]
UNIT_HEIGHT = 10
UNIT_WIDTH = 10
MIRROR = true
STOP_TOLERANCE = 0.005
OFFSET_X = 110
OFFSET_Y = 110
VERTICAL_SYMMETRY = true
HORIZONTAL_SYMMETRY = false
ALPHA = 0.001
BETA = 100
THETA = 5
GRID_SIZE = 6000

[linear_optimization.bipolar_transistors]
UNIT_HEIGHT = 50
UNIT_WIDTH = 50
MIRROR = true
STOP_TOLERANCE = 0.01
OFFSET_X = 50 # 184
OFFSET_Y = 50 # 100
VERTICAL_SYMMETRY = true
HORIZONTAL_SYMMETRY = false
ALPHA = 0.1
BETA = 100
THETA = 5
GRID_SIZE = 8000

# Magic layout creator config options
# -> Technology - defines which PDK technology we are targeting
# -> Metal layers - defines the metal layers that can be route in (ascending order)
# -> Via map - defines the via layers we can route in (ascending order)
# -> Via padding - defines how much padding in units of 1e-8m should be added around all vias

[magic_layout_creator]
TECHNOLOGY = 'sky130A'
METAL_LAYERS = ['locali', 'm1', 'm2', 'm3', 'm4', 'm5']
VIA_MAP = {"locali-m1" = "viali", "m1-m2" = "via1", "m2-m3" = "via2", "m3-m4" = "via3", "m4-m5" = "via4"}
VIA_PADDING = 7

# Generate rail traces config options
# -> Init rail ring offset x/y - offset from cells defined bounding box
# -> rail ring offset - distance from the outside of one ring to the outside of the next
# -> rail width - width of the rails

[generate_rail_traces]
INIT_RAIL_RING_OFFSET_Y = 50
INIT_RAIL_RING_OFFSET_X = 50
RAIL_RING_OFFSET = 100
RAIL_RING_WIDTH = 50

# Generate grid config options
# -> Grid size - area the components have to fit within
# -> Scale factor - shrink factor for routing space representation
# -> Via minimum distance - minimum offset between via points
# -> Trace width - width of traces
# -> Grid leeway x/y - extra space outside of component placement for additional routing space

[generate_grid]

SCALE_FACTOR = 16
TRACE_WIDTH = 30
VIA_MINIMUM_DISTANCE = 20
GRID_LEEWAY_X = 300
GRID_LEEWAY_Y = 500
# Astar initiator config options
# -> Run multiple astar - allows a star to be executed with each goal node as initial position to find the shortest path
# -> Custom net order - allows predefined order of nets in a star execution
# -> Net order - the predefined order

[a_star_initiator]
RUN_MULTIPLE_ASTAR = false
CUSTOM_NET_ORDER = false
REMOVE_LOOPS = true
TSP_NODE_ORDER = true
NET_ORDER = ["GATE", "INN",  "INP", "OUT", "IB_GATE", "AFTER_RESISTOR1", "AFTER_RESISTOR2", "OTA_SPLIT", "VDD", "VSS"]

# Cell creator config options
# -> Cells per row in top cell - Defined how many cells should placed per row in the projects defined top cell
[cell_creator]
CELLS_PER_ROW_IN_TOP_CELL = 1

[DRAW_RESULT]
FILE_NAME = 'Temporary_check'





